(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{13:function(t,i,s){"use strict";s.r(i);var h=s(18);class e extends h.a{constructor(){super({}),this.treeMax=1,this.trees=[],this.direction,this.count=[],this.colorInt=250}setup(){super.setup(),this.p.background(0),this.p.stroke(80,0,50,200),this.p.fill(250,this.colorInt,this.colorInt,220),this.p.ellipseMode(this.p.CENTER),this.direction=this.p.createVector(0,-this.p.height);for(let t=0;t<this.treeMax;t++){const i=this.p.createVector(this.p.random(this.p.width/4,this.p.width/4*3),this.p.height/1),s=new r(this.p,i,this.direction);this.trees[t]=s,this.count[t]=s.treeSize}}draw(){if(super.draw(),!this.p)return;let t;this.p.background(0);let i=10;for(t=0;t<this.treeMax;t++)this.trees[t].swing();for(this.p.stroke(255,200),t=0;t<this.treeMax;t++)for(let i=1;i<this.count[t];i++)this.p.strokeWeight(this.trees[t].twig[this.trees[t].map[i].x].thickness[this.trees[t].map[i].y]),this.p.line(this.trees[t].twig[this.trees[t].map[i].x].location[this.trees[t].map[i].y-1].x,this.trees[t].twig[this.trees[t].map[i].x].location[this.trees[t].map[i].y-1].y,this.trees[t].twig[this.trees[t].map[i].x].location[this.trees[t].map[i].y].x,this.trees[t].twig[this.trees[t].map[i].x].location[this.trees[t].map[i].y].y);for(this.p.noStroke(),i-=.4,i<=12&&(i=10),t=0;t<this.treeMax;t++)for(let s=0;s<this.trees[t].twig.length;s++){const h=this.trees[t].twig[s].location.length-1;this.p.ellipse(this.trees[t].twig[s].location[h].x,this.trees[t].twig[s].location[h].y,i,i)}}}class a{constructor(t,i,s,h,e){this.p=t,this.location=[],this.thickness=[],this.location[0]=this.p.createVector(i.x,i.y),this.thickness[0]=s,this.baseIndex=new Array(2),this.baseIndex[0]=new Array(1),this.baseIndex[1]=new Array(1),this.baseIndex[0][0]=h,this.baseIndex[1][0]=e,this.isCandidate=!1,this.dTheta=[]}branchRotate(t,i,s){this.location[t].sub(s),this.rotate2D(this.location[t],i),this.location[t].add(s)}rotate2D(t,i){const s=t.x;t.x=t.x*this.p.cos(i)-t.y*this.p.sin(i),t.y=s*this.p.sin(i)+t.y*this.p.cos(i)}}class n{constructor(t,i,s){this.p=t,this.location=this.p.createVector(i.x,i.y),this.velocity=this.p.createVector(s.x,s.y),this.thickness=this.p.random(10,20),this.finished=!1}update(t){if(this.location.x>-10&this.location.y>-10&this.location.x<this.p.width+10&this.location.y<this.p.height+10&this.thickness>t){this.velocity.normalize();const t=this.p.createVector(this.p.random(-1,1),this.p.random(-1,1));t.normalize(),t.mult(.2),this.velocity.mult(.8),this.velocity.add(t),this.velocity.mult(this.p.random(8,15)),this.location.add(this.velocity)}else this.finished=!0}}class o{constructor(t,i){this.p=t,this.location=i.location.copy(),this.velocity=i.velocity.copy(),this.thickness=i.thickness,i.thickness=this.thickness,this.finished=i.finished}update(t){if(this.location.x>-10&this.location.y>-10&this.location.x<this.p.width+10&this.location.y<this.p.height+10&this.thickness>t){this.velocity.normalize();const t=this.p.createVector(this.p.random(-1,1),this.p.random(-1,1));t.normalize(),t.mult(.2),this.velocity.mult(.8),this.velocity.add(t),this.velocity.mult(this.p.random(8,15)),this.location.add(this.velocity)}else this.finished=!0}}class r{constructor(t,i,s){this.p=t,this.BranchLengthFactor=.15,this.BranchLocationFactor=.3,this.dtheta,this.treeSize,this.candNum=3,this.candidateIndex=new Array(this.candNum),this.amplitude=new Array(this.candNum),this.phaseFactor=new Array(this.candNum),this.freq,this.period,this.dt=.025,this.time=0;let h=0,e=!1,r=[];for(r[h]=new n(this.p,i,s),this.twig=[],this.twig[h]=new a(this.p,r[h].location,r[h].thickness,h,0),this.map=[],this.map[0]=this.p.createVector(h,this.twig[h].location.length-1);!e;){let t=0;for(h=0;h<r.length;h++)if(r[h].update(this.BranchLocationFactor),r[h].finished)t+=1;else if(this.twig[h].location=this.p.append(this.twig[h].location,this.p.createVector(r[h].location.x,r[h].location.y)),this.twig[h].thickness=this.p.append(this.twig[h].thickness,r[h].thickness),this.map=this.p.append(this.map,this.p.createVector(h,this.twig[h].location.length-1)),this.p.random(0,1)<this.BranchLengthFactor&&(r[h].thickness*=.65,this.twig[h].thickness[this.twig[h].thickness.length-1]=r[h].thickness,r[h].thickness>this.BranchLocationFactor)){r=this.p.append(r,new o(this.p,r[h])),this.twig=this.p.append(this.twig,new a(this.p,r[h].location,r[h].thickness,h,this.twig[h].location.length-1));let t=h;if(0!==t)for(let i=0;i<2;i++)this.twig[this.twig.length-1].baseIndex[i]=this.p.concat(this.twig[this.twig.length-1].baseIndex[i],this.twig[t].baseIndex[i])}t==r.length&&(this.dtheta=new Array(this.twig.length),this.treeSize=this.map.length,e=!0)}let c=[],d=new Array(this.twig.length);for(let t=0;t<this.twig.length;t++)d[t]=this.twig[t].location.length,c.push(d[t]);this.candidateIndex[0]=0,this.twig[0].isCandidate=!0,this.twig[0].dTheta=new Array(this.twig[0].location.length),d[0]=-1,c[0]=-1;for(let t=1;t<this.candNum;t++){let i=this.p.max(d);this.candidateIndex[t]=c.indexOf(i),this.twig[this.candidateIndex[t]].isCandidate=!0,this.twig[this.candidateIndex[t]].dTheta=new Array(this.twig[this.candidateIndex[t]].location.length),d[this.candidateIndex[t]]=-1,c[this.candidateIndex[t]]=-1}this.amplitude[0]=this.p.random(.006,.012),this.phaseFactor[0]=this.p.random(.6,1.2),this.freq=this.p.random(.5,.8),this.period=1/this.freq;for(let t=1;t<this.candNum;t++)this.amplitude[t]=this.amplitude[t-1]*this.p.random(.9,1.4),this.phaseFactor[t]=this.phaseFactor[t-1]*this.p.random(.9,1.4)}swing(){for(let t=0;t<this.candNum;t++){let i=this.twig[this.candidateIndex[t]].location.length;for(let s=0;s<i;s++)this.twig[this.candidateIndex[t]].dTheta[s]=this.amplitude[t]*this.dt*this.p.TWO_PI*this.freq*this.p.cos(this.p.TWO_PI*this.freq*this.time-this.phaseFactor[t]*this.p.PI*s/i)}for(let t=0;t<this.twig.length;t++){if(this.twig[t].isCandidate)for(let i=1;i<this.twig[t].location.length;i++)this.twig[t].branchRotate(i,this.twig[t].dTheta[i],this.twig[t].location[0]);for(let i=0;i<this.twig[t].baseIndex[0].length;i++)if(!(!this.twig[this.twig[t].baseIndex[0][i]].isCandidate|0==t))for(let s=0==t?1:0;s<this.twig[t].location.length;s++)this.twig[t].branchRotate(s,this.twig[this.twig[t].baseIndex[0][i]].dTheta[this.twig[t].baseIndex[1][i]],this.twig[this.twig[t].baseIndex[0][i]].location[0])}this.time+=this.dt,this.time>=this.period&&(this.time-=this.period)}}i.default=function(){(new e).init()}},18:function(t,i,s){"use strict";s.d(i,"a",(function(){return o}));var h=s(19),e=s.n(h),a=s(20),n=s(0);class o{constructor({renderer:t="P2D",use2D:i=!0,useMic:s=!1}){this.renderer=t,this.use2D=i,this.p,this.w=window.innerWidth,this.h=window.innerHeight,this.alpha=0,this.graphic=null,this.canvas,this.fadeFlag=!1,this.startFade=this.startFade.bind(this),this.dispose=this.dispose.bind(this),this.useMic=s,this.mic,this.meter}setup(){const t="WEBGL"===this.renderer?this.p.WEBGL:this.p.P2D;this.p.createCanvas(this.w,this.h,t),this.graphic=this.p.createGraphics(this.w,this.h),this.graphic.hide(),window.addEventListener("fade",this.startFade,!1),this.useMic&&(this.meter=new a.a,this.mic=new a.b,this.mic.open(),this.mic.connect(this.meter))}draw(){"WEBGL"===this.renderer&&this.use2D&&this.p.translate(-this.p.width/2,-this.p.height/2,0),this.fadeFlag&&(this.graphic.clear(),this.graphic.fill(0,this.alpha),this.graphic.rect(0,0,this.graphic.width,this.graphic.height),this.alpha+=2,this.alpha>n.a.ALPHA_MAX&&this.dispose())}preload(){}mousePressed(){}keyTyped(){32!==this.p.keyCode||this.fadeFlag||this.startFade()}keyPressed(){}doubleClicked(){this.p.saveCanvas("sketch","png")}init(){this.canvas=new e.a(t=>{this.p=t,this.p.preload=()=>this.preload(),this.p.setup=()=>this.setup(),this.p.draw=()=>this.draw(),this.p.mousePressed=()=>this.mousePressed(),this.p.keyTyped=()=>this.keyTyped(),this.p.keyPressed=()=>this.keyPressed(),this.p.doubleClicked=()=>this.doubleClicked()},"canvas")}startFade(){this.graphic.show(),this.fadeFlag=!0}dispose(){this.graphic.remove(),this.graphic=null,this.p.remove(),this.p=null,this.sketch=null,this.canvas=null,this.useMic&&this.mic.close(),this.mic=null,window.removeEventListener("fade",this.startFade,!1);const t=new Event("finish");window.dispatchEvent(t)}get getSketch(){return this.p}get getVolume(){return this.meter.getValue()}}}}]);